name: Run DOI Provisioning

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Recupera tutta la cronologia per sicurezza

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Get JSON file from current commit
        id: get_json
        run: |
          echo "🔍 Cerco file .json nel commit corrente..."
          FILE=$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | grep '\.json$' | head -n 1)
          if [ -z "$FILE" ]; then
            echo "⚠️ Nessun file JSON trovato nel commit ${{ github.sha }}"
          else
            echo "✅ Trovato file JSON: $FILE"
            echo "json_file=$FILE" >> $GITHUB_OUTPUT
          fi

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "⚠️ requirements.txt non trovato, salto l'installazione."

      - name: Run metadata DOI provisioning script
        run: |
          echo "📄 JSON file path ricevuto: '${{ steps.get_json.outputs.json_file }}'"
          if [ -n "${{ steps.get_json.outputs.json_file }}" ]; then
            python ./procedures/metadata_doi_provisioning.py "${{ steps.get_json.outputs.json_file }}"
          else
            echo "⏭️ Nessun file JSON da elaborare, lo script non verrà eseguito."

      - name: Commit and push changes
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          echo "TEST new file" >> New_file.txt
          git add New_file.txt
          git commit -m "upload new file" || echo "Nessuna modifica da committare"

          # Aggiungi il secondo remote (usa un token sicuro)
          git remote add secondary https://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@github.com/ESA-EarthCODE/open-science-catalog-doi-provisioning.git

          # Push al repository principale
          git push origin main

          # Push al repository secondario
          git push secondary main
