name: Run DOI Provisioning

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  run-script:
    runs-on: ubuntu-latest
    permissions: write-all
    env:
      DATACITE_USER: ${{ secrets.DATACITE_USER }}
      DATACITE_P: ${{ secrets.DATACITE_P }}
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Recupera tutta la cronologia per sicurezza

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Get JSON file from current commit
        id: get_json
        run: |
          echo "üîç Cerco file .json nel commit corrente..."
          FILE=$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | grep '\.json$' | head -n 1)
          if [ -z "$FILE" ]; then
            echo "‚ö†Ô∏è Nessun file JSON trovato nel commit ${GITHUB_SHA}"
          else
            echo "‚úÖ Trovato file JSON: $FILE"
            echo "json_file=$FILE" >> $GITHUB_OUTPUT
          fi

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "‚ö†Ô∏è requirements.txt non trovato, salto l'installazione."
          fi

      - name: Run metadata DOI provisioning script
        run: |
          echo "üìÑ JSON file path ricevuto: '${{ steps.get_json.outputs.json_file }}'"
          if [ -n "${{ steps.get_json.outputs.json_file }}" ]; then
            python ./procedures/metadata_doi_provisioning.py "${{ steps.get_json.outputs.json_file }}"
          else
            echo "‚è≠Ô∏è Nessun file JSON da elaborare, lo script non verr√† eseguito."
          fi

      - name: Commit and push changes
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git commit -m "update of json metadata file: $FILE"

          # Push al repository principale
          git push origin main
